"use strict";(self.webpackChunklearning=self.webpackChunklearning||[]).push([[8296],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>p});var a=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var s=a.createContext({}),u=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},c=function(e){var n=u(e.components);return a.createElement(s.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=u(t),p=l,h=d["".concat(s,".").concat(p)]||d[p]||m[p]||i;return t?a.createElement(h,r(r({ref:n},c),{},{components:t})):a.createElement(h,r({ref:n},c))}));function p(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var i=t.length,r=new Array(i);r[0]=d;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,r[1]=o;for(var u=2;u<i;u++)r[u]=t[u];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},2659:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>r,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var a=t(7462),l=(t(7294),t(3905));const i={id:"Section 17. Synonym, Sequence",sidebar_position:17,description:"Synonym, Sequence"},r=void 0,o={unversionedId:"oracle/Section 17. Synonym, Sequence",id:"oracle/Section 17. Synonym, Sequence",title:"Section 17. Synonym, Sequence",description:"Synonym, Sequence",source:"@site/docs/oracle/17_synonym.md",sourceDirName:"oracle",slug:"/oracle/Section 17. Synonym, Sequence",permalink:"/learning/docs/oracle/Section 17. Synonym, Sequence",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/oracle/17_synonym.md",tags:[],version:"current",sidebarPosition:17,frontMatter:{id:"Section 17. Synonym, Sequence",sidebar_position:17,description:"Synonym, Sequence"},sidebar:"tutorialSidebar",previous:{title:"Section 16. Index",permalink:"/learning/docs/oracle/Section 16. Index"},next:{title:"Section 18. Jobs",permalink:"/learning/docs/oracle/Section 18. Jobs"}},s={},u=[{value:"Synonyms",id:"synonyms",level:2},{value:"Sequence",id:"sequence",level:2},{value:"<code>INCREMENT BY</code>",id:"increment-by",level:4},{value:"<code>START WITH</code>",id:"start-with",level:4},{value:"<code>MAXVALUE</code>",id:"maxvalue",level:4},{value:"<code>NOMAXVALUE</code>",id:"nomaxvalue",level:4},{value:"<code>MINVALUE</code>",id:"minvalue",level:4},{value:"<code>NOMINVALUE</code>",id:"nominvalue",level:4},{value:"<code>CYCLE</code>",id:"cycle",level:4},{value:"<code>NOCYCLE</code>",id:"nocycle",level:4},{value:"<code>CACHE</code>",id:"cache",level:4},{value:"<code>ORDER</code>",id:"order",level:4},{value:"<code>NOORDER</code>",id:"noorder",level:4},{value:"Modifying a sequence",id:"modifying-a-sequence",level:3},{value:"Removing a sequence",id:"removing-a-sequence",level:3},{value:"Sequence privileges",id:"sequence-privileges",level:3}],c={toc:u};function m(e){let{components:n,...t}=e;return(0,l.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"synonyms"},"Synonyms"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Synonyms create a level of abstraction of the underlying schema objects so that you can rename and move of the underlying objects without affecting the applications based on the synonyms."),(0,l.kt)("li",{parentName:"ul"},"Synonyms themselves are not secured. When you grant object privileges on a synonym, you are granting privileges on the underlying object, and the synonym only acts as an alias in the GRANT statement."),(0,l.kt)("li",{parentName:"ul"},"Synonyms provide a level of security by hiding the name and owner of a schema object such as a table or a view. On top of that, they provide location transparency for remote objects of a distributed database."),(0,l.kt)("li",{parentName:"ul"},"Synonyms can be public or private. A public synonym is accessible to every user in a database and owned by a specified group named ",(0,l.kt)("inlineCode",{parentName:"li"},"PUBLIC")," while a private synonym is stored a specific schema owned by a specific user and available only to that user."),(0,l.kt)("li",{parentName:"ul"},"Users must have sufficient privileges on the underlying objects to use the public synonyms."),(0,l.kt)("li",{parentName:"ul"},"Suppose you have a table called sales in the schema owned by the user lion, and you granted the ",(0,l.kt)("inlineCode",{parentName:"li"},"SELECT")," privilege for the sales table to ",(0,l.kt)("inlineCode",{parentName:"li"},"PUBLIC"),".")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE PUBLIC SYNONYM sales FOR lion.sales;\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE [OR REPLACE] [PUBLIC] SYNONYM schema.synonym_name\nFOR schema.object;\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"DROP SYNONYM schema.synonym_name FORCE;\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"the ",(0,l.kt)("inlineCode",{parentName:"li"},"FORCE")," keyword to delete the synonym even if it has dependent tables or user-defined types.")),(0,l.kt)("h2",{id:"sequence"},"Sequence"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE SEQUENCE schema_name.sequence_name\n[INCREMENT BY interval]\n[START WITH first_number]\n[MAXVALUE max_value | NOMAXVALUE]\n[MINVALUE min_value | NOMINVALUE]\n[CYCLE | NOCYCLE]\n[CACHE cache_size | NOCACHE]\n[ORDER | NOORDER];\n")),(0,l.kt)("h4",{id:"increment-by"},(0,l.kt)("inlineCode",{parentName:"h4"},"INCREMENT BY")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Specify the interval between sequence numbers after the ",(0,l.kt)("inlineCode",{parentName:"li"},"INCREMENT BY")," keyword."),(0,l.kt)("li",{parentName:"ul"},"The interval can have less than 28 digits. It also must be less than ",(0,l.kt)("inlineCode",{parentName:"li"},"MAXVALUE")," - ",(0,l.kt)("inlineCode",{parentName:"li"},"MINVALUE"),"."),(0,l.kt)("li",{parentName:"ul"},"If the interval is positive, the sequence is ascending e.g., 1,2,3,\u2026"),(0,l.kt)("li",{parentName:"ul"},"If the interval is negative, the sequence is descending e.g., -1, -2, -3 \u2026"),(0,l.kt)("li",{parentName:"ul"},"The default value of interval is 1.")),(0,l.kt)("h4",{id:"start-with"},(0,l.kt)("inlineCode",{parentName:"h4"},"START WITH")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Specify the first number in the sequence."),(0,l.kt)("li",{parentName:"ul"},"The default value of the first number is the minimum value of the sequence for an ascending sequence and maximum value of the sequence for a descending sequence.")),(0,l.kt)("h4",{id:"maxvalue"},(0,l.kt)("inlineCode",{parentName:"h4"},"MAXVALUE")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Specify the maximum value of the sequence."),(0,l.kt)("li",{parentName:"ul"},"The max_value must be equal to or greater than first_number specify after the ",(0,l.kt)("inlineCode",{parentName:"li"},"START WITH")," keywords.")),(0,l.kt)("h4",{id:"nomaxvalue"},(0,l.kt)("inlineCode",{parentName:"h4"},"NOMAXVALUE")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Use ",(0,l.kt)("inlineCode",{parentName:"li"},"NOMAXVALUE")," to denote a maximum value of 10^27 for an ascending sequence or -1 for a descending sequence. Oracle uses this option as the default.")),(0,l.kt)("h4",{id:"minvalue"},(0,l.kt)("inlineCode",{parentName:"h4"},"MINVALUE")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Specify the minimum value of the sequence."),(0,l.kt)("li",{parentName:"ul"},"The min_value must be less than or equal to the first_number and must be less than max_value.")),(0,l.kt)("h4",{id:"nominvalue"},(0,l.kt)("inlineCode",{parentName:"h4"},"NOMINVALUE")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Use ",(0,l.kt)("inlineCode",{parentName:"li"},"NOMINVALUE")," to indicate a minimum value of 1 for an ascending sequence or -10^26 for a descending sequence. This is the default.")),(0,l.kt)("h4",{id:"cycle"},(0,l.kt)("inlineCode",{parentName:"h4"},"CYCLE")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Use ",(0,l.kt)("inlineCode",{parentName:"li"},"CYCLE")," to allow the sequence to generate value after it reaches the limit, min value for a descending sequence and max value for an ascending sequence."),(0,l.kt)("li",{parentName:"ul"},"When an ascending sequence reaches its maximum value, it generates the minimum value."),(0,l.kt)("li",{parentName:"ul"},"On the other hand, when a descending sequence reaches its minimum value, it generates the maximum value.")),(0,l.kt)("h4",{id:"nocycle"},(0,l.kt)("inlineCode",{parentName:"h4"},"NOCYCLE")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Use ",(0,l.kt)("inlineCode",{parentName:"li"},"NOCYCLE")," if you want the sequence to stop generating the next value when it reaches its limit. This is the default.")),(0,l.kt)("h4",{id:"cache"},(0,l.kt)("inlineCode",{parentName:"h4"},"CACHE")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Specify the number of sequence values that Oracle will preallocate and keep in the memory for faster access."),(0,l.kt)("li",{parentName:"ul"},"The minimum of the cache size is 2. The maximum value of the cache size is based on this formula:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"(CEIL (MAXVALUE - MINVALUE)) / ABS (INCREMENT)\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"In case of a system failure event, you will lose all cached sequence values that have not been used in committed SQL statements.")),(0,l.kt)("h4",{id:"order"},(0,l.kt)("inlineCode",{parentName:"h4"},"ORDER")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Use ",(0,l.kt)("inlineCode",{parentName:"p"},"ORDER")," to ensure that Oracle will generate the sequence numbers in order of request.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"This option is useful if you are using ",(0,l.kt)("em",{parentName:"p"},"Oracle Real Application Clusters"),". When you are using exclusive mode, then Oracle will always generate sequence numbers in order."))),(0,l.kt)("h4",{id:"noorder"},(0,l.kt)("inlineCode",{parentName:"h4"},"NOORDER")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Use ",(0,l.kt)("inlineCode",{parentName:"li"},"NOORDER")," if you do not want to ensure Oracle to generate sequence numbers in order of request. This option is the default.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE SEQUENCE item_seq;\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"To access the next available value for a sequence, you use the ",(0,l.kt)("inlineCode",{parentName:"li"},"NEXTVAL")," pseudo-column:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT item_seq.NEXTVAL\nFROM dual;\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Once, you acquire the sequence number through the ",(0,l.kt)("inlineCode",{parentName:"li"},"NEXTVAL")," pseudo-column, you can access it repeatedly using the ",(0,l.kt)("inlineCode",{parentName:"li"},"CURRVAL")," pseudo-column:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT item_seq.CURRVAL\nFROM dual;\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The following statement uses the item_seq sequence repeatedly in an SQL statement:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT item_seq.NEXTVAL\nFROM   dual\nCONNECT BY level <= 5;\n\n   NEXTVAL\n----------\n         2\n         3\n         4\n         5\n         6\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"From Oracle 11g onward, you can use sequences in PL/SQL. Behind the scenes, Oracle still uses a query from the dual table, but it makes the code cleaner:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"DECLARE\n    v_seq NUMBER;\nBEGIN\n    v_seq  := item_seq.NEXTVAL;\n    DBMS_OUTPUT.put_line('v_seq=' || v_seq);\nEND;\n")),(0,l.kt)("h3",{id:"modifying-a-sequence"},"Modifying a sequence"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"ALTER SEQUENCE item_seq MAXVALUE 100;\n")),(0,l.kt)("h3",{id:"removing-a-sequence"},"Removing a sequence"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"DROP SEQUENCE item_seq;\n")),(0,l.kt)("h3",{id:"sequence-privileges"},"Sequence privileges"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"GRANT CREATE SEQUENCE\nTO user_name;\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"In addition, Oracle provides the following privileges that allow you to manipulate sequences in all schemas, including the built-in ones:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"GRANT CREATE ANY SEQUENCE,\n    ALTER ANY SEQUENCE,\n    DROP ANY SEQUENCE,\n    SELECT ANY SEQUENCE\nTO user_name;\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"If you are the owner of the sequence, you will have the full privileges on the sequence. To grant another user access to a sequence, you can grant the ",(0,l.kt)("inlineCode",{parentName:"li"},"SELECT")," object privilege to that user as shown in the following command:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"GRANT SELECT ON user_name.sequence_name\nTO another_user;\n")))}m.isMDXComponent=!0}}]);
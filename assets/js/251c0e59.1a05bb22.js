"use strict";(self.webpackChunklearning=self.webpackChunklearning||[]).push([[402],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(r),m=a,f=d["".concat(s,".").concat(m)]||d[m]||c[m]||o;return r?n.createElement(f,i(i({ref:t},u),{},{components:r})):n.createElement(f,i({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8736:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const o={id:"Section 6. Grouping data",sidebar_position:6,description:"GROUP BY, HAVING"},i=void 0,l={unversionedId:"oracle/Section 6. Grouping data",id:"oracle/Section 6. Grouping data",title:"Section 6. Grouping data",description:"GROUP BY, HAVING",source:"@site/docs/oracle/6_grouping-data.md",sourceDirName:"oracle",slug:"/oracle/Section 6. Grouping data",permalink:"/learning/docs/oracle/Section 6. Grouping data",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/oracle/6_grouping-data.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{id:"Section 6. Grouping data",sidebar_position:6,description:"GROUP BY, HAVING"},sidebar:"tutorialSidebar",previous:{title:"Section 5. Joining tables",permalink:"/learning/docs/oracle/Section 5. Joining tables"},next:{title:"Section 7. Subquery",permalink:"/learning/docs/oracle/Section 7. Subquery"}},s={},p=[{value:"GROUP BY",id:"group-by",level:2},{value:"GROUP BY with an expression",id:"group-by-with-an-expression",level:3},{value:"HAVING",id:"having",level:2}],u={toc:p};function c(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"group-by"},"GROUP BY"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"GROUP BY")," clause is used in a ",(0,a.kt)("inlineCode",{parentName:"p"},"SELECT")," statement to group rows into a set of summary rows by values of columns or expressions. The ",(0,a.kt)("inlineCode",{parentName:"p"},"GROUP BY")," clause returns one row per group."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT customer_id, COUNT( order_id )\nFROM orders\nGROUP BY customer_id\nORDER BY customer_id;\n")),(0,a.kt)("h3",{id:"group-by-with-an-expression"},"GROUP BY with an expression"),(0,a.kt)("p",null,"The following example groups the orders by year and returns the number of orders per year."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT EXTRACT(YEAR FROM order_date) YEAR, COUNT( order_id )\nFROM orders\nGROUP BY EXTRACT(YEAR FROM order_date)\nORDER BY YEAR;\n")),(0,a.kt)("h2",{id:"having"},"HAVING"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"HAVING")," clause is an optional clause of the ",(0,a.kt)("inlineCode",{parentName:"p"},"SELECT")," statement. It is used to filter groups of rows returned by the ",(0,a.kt)("inlineCode",{parentName:"p"},"GROUP BY")," clause. This is why the ",(0,a.kt)("inlineCode",{parentName:"p"},"HAVING")," clause is usually used with the ",(0,a.kt)("inlineCode",{parentName:"p"},"GROUP BY")," clause."),(0,a.kt)("p",null,"If you use the ",(0,a.kt)("inlineCode",{parentName:"p"},"HAVING")," clause without the ",(0,a.kt)("inlineCode",{parentName:"p"},"GROUP BY")," clause, the ",(0,a.kt)("inlineCode",{parentName:"p"},"HAVING")," clause works like the ",(0,a.kt)("inlineCode",{parentName:"p"},"WHERE")," clause."),(0,a.kt)("p",null,"Note that the ",(0,a.kt)("inlineCode",{parentName:"p"},"HAVING")," clause filters groups of rows while the ",(0,a.kt)("inlineCode",{parentName:"p"},"WHERE")," clause filters rows. This is a main difference between the ",(0,a.kt)("inlineCode",{parentName:"p"},"HAVING")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"WHERE")," clauses."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT order_id, SUM( unit_price * quantity  order_value\nFROM order_items\nGROUP BY order_id\nHAVING SUM( unit_price * quantity ) > 1000000\nORDER BY order_value DESC;\n")))}c.isMDXComponent=!0}}]);
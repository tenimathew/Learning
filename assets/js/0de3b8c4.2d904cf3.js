"use strict";(self.webpackChunklearning=self.webpackChunklearning||[]).push([[2789],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>d});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=c(a),d=i,h=m["".concat(s,".").concat(d)]||m[d]||p[d]||r;return a?n.createElement(h,l(l({ref:t},u),{},{components:a})):n.createElement(h,l({ref:t},u))}));function d(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,l=new Array(r);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var c=2;c<r;c++)l[c]=a[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},8052:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var n=a(7462),i=(a(7294),a(3905));const r={id:"Section 30. Query Tuning",sidebar_position:30,description:"Basics"},l=void 0,o={unversionedId:"oracle/Section 30. Query Tuning",id:"oracle/Section 30. Query Tuning",title:"Section 30. Query Tuning",description:"Basics",source:"@site/docs/oracle/30_query-tuning.md",sourceDirName:"oracle",slug:"/oracle/Section 30. Query Tuning",permalink:"/learning/docs/oracle/Section 30. Query Tuning",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/oracle/30_query-tuning.md",tags:[],version:"current",sidebarPosition:30,frontMatter:{id:"Section 30. Query Tuning",sidebar_position:30,description:"Basics"},sidebar:"tutorialSidebar",previous:{title:"Section 29. Oracle Storage",permalink:"/learning/docs/oracle/Section 29. Oracle Storage"},next:{title:"Oracle Apex",permalink:"/learning/docs/category/oracle-apex"}},s={},c=[{value:"Reason for performance loss",id:"reason-for-performance-loss",level:2},{value:"Characteristics of Bad SQL",id:"characteristics-of-bad-sql",level:2},{value:"Effective Schema Design",id:"effective-schema-design",level:2},{value:"SQL Tuning Techniques",id:"sql-tuning-techniques",level:2},{value:"Common possible solutions:",id:"common-possible-solutions",level:3},{value:"There are 4 major tools to get the execution plan and the statistics :",id:"there-are-4-major-tools-to-get-the-execution-plan-and-the-statistics-",level:3},{value:"AUTOTRACE",id:"autotrace",level:4},{value:"SQL Monitoring (Paid tool)",id:"sql-monitoring-paid-tool",level:4},{value:"TKPROF",id:"tkprof",level:4},{value:"DBMS_XPLAN",id:"dbms_xplan",level:4}],u={toc:c};function p(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"reason-for-performance-loss"},"Reason for performance loss"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Structural changes of table"),(0,i.kt)("li",{parentName:"ul"},"Changes in data volume"),(0,i.kt)("li",{parentName:"ul"},"Datatype change in application. (Ex: number changed to character) Implicit casting cause performance loss"),(0,i.kt)("li",{parentName:"ul"},"Aged statistics (stale)"),(0,i.kt)("li",{parentName:"ul"},"Database upgrades"),(0,i.kt)("li",{parentName:"ul"},"Database prameter changes (PGA, SGA sizes)"),(0,i.kt)("li",{parentName:"ul"},"OS and hardware changes")),(0,i.kt)("h2",{id:"characteristics-of-bad-sql"},"Characteristics of Bad SQL"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Unnecessary parse time"),(0,i.kt)("li",{parentName:"ul"},"Unnecessary I/O operations. How many blocks read to get how many rows"),(0,i.kt)("li",{parentName:"ul"},"Unnecessary CPU time. Join, Sort will use CPU"),(0,i.kt)("li",{parentName:"ul"},"Unnecessary waits"),(0,i.kt)("li",{parentName:"ul"},"Time on Wait (CPU) + Time on Execution = DB Time")),(0,i.kt)("h2",{id:"effective-schema-design"},"Effective Schema Design"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Select the datatypes carefully"),(0,i.kt)("li",{parentName:"ul"},"Select exactly the same data type between parent-child keys"),(0,i.kt)("li",{parentName:"ul"},"Enforce data integrity using foreign key or triggers"),(0,i.kt)("li",{parentName:"ul"},"Use normalization. This will result in smaller table."),(0,i.kt)("li",{parentName:"ul"},"Select right table type"),(0,i.kt)("li",{parentName:"ul"},"Create clusters with commonly joined tables"),(0,i.kt)("li",{parentName:"ul"},"Use indexes often and select index type carefully"),(0,i.kt)("li",{parentName:"ul"},"Create index-organized tables (IOT). Table that is stored in index. Useful for small tables and that is used frequently.")),(0,i.kt)("h2",{id:"sql-tuning-techniques"},"SQL Tuning Techniques"),(0,i.kt)("h3",{id:"common-possible-solutions"},"Common possible solutions:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Make the statistics up to date"),(0,i.kt)("li",{parentName:"ul"},"Use dynamic statistics"),(0,i.kt)("li",{parentName:"ul"},"Create or modify indexes"),(0,i.kt)("li",{parentName:"ul"},"Rewrite the query to use an index"),(0,i.kt)("li",{parentName:"ul"},"Use hints"),(0,i.kt)("li",{parentName:"ul"},"Remove wrong hints"),(0,i.kt)("li",{parentName:"ul"},"Change the hints"),(0,i.kt)("li",{parentName:"ul"},"Eliminate implicit data type conversion"),(0,i.kt)("li",{parentName:"ul"},"Create function-based indexes"),(0,i.kt)("li",{parentName:"ul"},"Use index-organized tables"),(0,i.kt)("li",{parentName:"ul"},"Change the optimizer mode (ALL_ROWS, FIRST_ROWS(N))"),(0,i.kt)("li",{parentName:"ul"},"Use parallel execution"),(0,i.kt)("li",{parentName:"ul"},"Use materialized views"),(0,i.kt)("li",{parentName:"ul"},"Modify or disable triggers and constraints"),(0,i.kt)("li",{parentName:"ul"},"Check the Access paths"),(0,i.kt)("li",{parentName:"ul"},"Check join orders and join types"),(0,i.kt)("li",{parentName:"ul"},"Compare the actual & estimated number of rows"),(0,i.kt)("li",{parentName:"ul"},"Check the operations where the cost and logical reads differ significantly"),(0,i.kt)("li",{parentName:"ul"},"Do not use SELECT ","*"," for all the queries. It may change the execution plan, it need to check the data dictionary to get the table structure, more I/O operations needed, overloads the network.\n",(0,i.kt)("img",{src:a(1889).Z,width:"634",height:"288"}))),(0,i.kt)("h3",{id:"there-are-4-major-tools-to-get-the-execution-plan-and-the-statistics-"},"There are 4 major tools to get the execution plan and the statistics :"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Autotrace"),(0,i.kt)("li",{parentName:"ul"},"SQL Monitor"),(0,i.kt)("li",{parentName:"ul"},"TKPROF"),(0,i.kt)("li",{parentName:"ul"},"DBMS_XPLAN")),(0,i.kt)("h4",{id:"autotrace"},"AUTOTRACE"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"It is free."),(0,i.kt)("li",{parentName:"ul"},"SQL Developer and SQL Plus may show different statistics because of execution plan changes or result is available in buffer cache in second execution."),(0,i.kt)("li",{parentName:"ul"},"We can compare two different execution plans and statistics with SQL Developer."),(0,i.kt)("li",{parentName:"ul"},"SQL Developer has a hotspot button which shows the problematic area of the plan."),(0,i.kt)("li",{parentName:"ul"},"We can export a plan and use it later."),(0,i.kt)("li",{parentName:"ul"},"By default, SQL Developer autotrace doesn't read the all of the rows. It is important to read all the rows to know the real execution plan. (Check Tools->Preferences->Database->Autotrace/Explain Plan in SQL Developer)"),(0,i.kt)("li",{parentName:"ul"},"Autotrace has to wait till the execution is finished to show the plan. But SQL monitoring can show real time execution plan")),(0,i.kt)("h4",{id:"sql-monitoring-paid-tool"},"SQL Monitoring (Paid tool)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Introduced in 11g")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"It shows the execution plan and the statistics of the query being used right now with graphical views")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"It can be viewed by SQL Developer or Enterprise Manager or by an SQL code")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"It captures the queries running longer than 5 seconds or running in parallel mode")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"If our query doesn't suit to these, we can add MONITOR hint to make it show on the list.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Needs Diagnostics and Tuning packs to be licensed.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"We can view SQL Monitoring information from v$sql_monitor and v$sqL_plan_monitor database views.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Using SQL Developer"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Tools -> Monitor Sessions (Lightweight version of SQL monitoring tool. Not so useful for performance tuning)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Tools -> Real Time SQL Monitor (SQL monitoring tool)"),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("img",{src:a(5975).Z,width:"1918",height:"189"})),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("img",{src:a(9148).Z,width:"1223",height:"564"}))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Using Enterprise Manager"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Only for DBA")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Performance -> Performance Hub"),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("img",{src:a(6091).Z,width:"674",height:"232"})),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("img",{src:a(4889).Z,width:"1875",height:"938"})),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("img",{src:a(3180).Z,width:"1881",height:"451"})))))),(0,i.kt)("h4",{id:"tkprof"},"TKPROF"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"It is a free tool."),(0,i.kt)("li",{parentName:"ul"},"An SQL trace file include:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Performance information of our queries."),(0,i.kt)("li",{parentName:"ul"},"CPU Time and Elapsed Time"),(0,i.kt)("li",{parentName:"ul"},"Wait Events"),(0,i.kt)("li",{parentName:"ul"},"Execution Plans"),(0,i.kt)("li",{parentName:"ul"},"Row Counts"),(0,i.kt)("li",{parentName:"ul"},"Call Counts (Parse, Execute, Fetch)"),(0,i.kt)("li",{parentName:"ul"},"Physical and Logical Reads"))),(0,i.kt)("li",{parentName:"ul"},"Location of trace file:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT value FROM V$DIAG_INFO\nWHERE name = 'Diag Trace';\n"))),(0,i.kt)("li",{parentName:"ul"},"You need to enable tracing for a specific user | specific sessions | entire database. Tracing entire database it will consume a lot of resources to track everything. So do not use that and close the tracing after what we need is taken."),(0,i.kt)("li",{parentName:"ul"},"Can use below methods to enable tracing:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"dbms_monitor.database_trace_enable() ;\ndbms_session.set_sql_trace();\nALTER SESSION SET SQL_TRACE = TRUE | FALSE; -- Trace current session; Cannot trace Waits or Bind variable\nDBMS_SESSION.SESSION_TRACE_ENABLE(waits => TRUE, binds =>FALSE); --Trace current session with Wait time trace and not with Bind variable trace\nDBMS_MONITOR.SESSION_TRACE_ENABLE(session_id=>27, serial_ num=>60, waits=\u203aTRUE, binds=\u203aFALSE); -- Trace a different session\nDBMS_SESSION.SESSION_TRACE DISABLE(); -- Disable current session tracing\nDBMS_MONITOR.SESSION_TRACE_DISABLE(session_id=\u203a27, serial_num=\u203a60); -- Disable different session tracing\n"))),(0,i.kt)("li",{parentName:"ul"},"You can use ",(0,i.kt)("inlineCode",{parentName:"li"},"TRCESS")," utility to merge multiple trace files"),(0,i.kt)("li",{parentName:"ul"},"TKPROF converts SQL trace files into a human readable format."),(0,i.kt)("li",{parentName:"ul"},"In TKPROF, it does not show commit and rollback operations even if they are available in SQL trace file.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"TKPROF trace_file_name output_file_name\n                            [waits=yes|no] -- Show wait information in output or not; Default= YES\n                            [sort=option] -- Sort by elapsed/CPU time etc; Default is by the execution time of the queries\n                            [print=n] -- How many queries in the output file. Show only first 5 etc..\n                            [aggregate=yes|no]\n                            [insert=insert_file_name]\n                            [sys=yes|no]\n                            [table=schema.table]\n                            [explain=user/password]\n                            [record=record_file_name]\n                            [width=n]:\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Generate and read one:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"CMD> login as sysdba\nSQL> ALTER SESSION SET TRACE_FILE_IDENTIFIER = TUN; -- This will apend this name after every trace file. So it will be easier to identify which trace file we created for that session\nSQL> ALTER SESSION SET SQL_TRACE = TRUE;\nSQL> SELECT * FROM EMPLOYEES;\nSQL> ALTER SESSION SET SQL_TRACE = FALSE;\nSQL> SELECT value FROM V$DIAG_INFO\n  WHERE name = 'Diag Trace';\n")),(0,i.kt)("p",null,(0,i.kt)("img",{src:a(7360).Z,width:"1470",height:"727"})),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"SQL> EXIT;\nCMD> cd C:\\app\\omr\\diag\\rdbms\\orcl\\orcl\\trace\nCMD> tkprof orcl_ora_3788_TUN.trc tun_ex.txt\n")),(0,i.kt)("p",null,(0,i.kt)("img",{src:a(1704).Z,width:"1441",height:"802"})),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"You need to have the access privilege to the database server to use this."),(0,i.kt)("li",{parentName:"ul"},"It includes all the SOL statements run between the tracing starts and ends. So you can find which all queries contributed to the bottle neck situation")),(0,i.kt)("h4",{id:"dbms_xplan"},"DBMS_XPLAN"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"It shows performance statistics for each step of the plan"),(0,i.kt)("li",{parentName:"ul"},"If the query has already run before, there is no need to run for DBMS_XPLAN."),(0,i.kt)("li",{parentName:"ul"},"If it is deleted from the cache, the AWR tool can show earlier plans.")))}p.isMDXComponent=!0},5975:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/2023-01-05-04-14-07-ce5a3c045ee7b5ae0154e125d44be452.png"},9148:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/2023-01-05-04-25-12-db071509731f42aa45684aad8d94e429.png"},6091:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/2023-01-05-04-27-03-6c8600c9c922e07401ced5b8ef3b2067.png"},4889:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/2023-01-05-04-30-42-4336e042c5ed745662854577b6bb394c.png"},3180:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/2023-01-05-04-31-58-03d6bb5e0e042e12c338e1c39dc3c2f3.png"},7360:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/2023-01-06-03-24-26-52cdc1924b891cbb8f69d8ffc9719527.png"},1704:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/2023-01-06-03-28-38-07a31e814ff84bf5a90078c8aed6dcbd.png"},1889:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/2023-01-06-03-52-40-88934e5df6b88bee77e0fc94448fba9f.png"}}]);